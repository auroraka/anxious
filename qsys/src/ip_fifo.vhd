-- altera vhdl_input_version vhdl_2008

-- Manually instantiated megafunction dcfifo, modified based on the file
-- generated by magafunction wizard.

-- Note the `aclr` (async clear) port is high active in dcfifo, but we
-- provide a low active `clr_n` port for consistency with other components
-- of the project.

-- We consider this file to be device(-family)-dependent.

LIBRARY ieee;
USE ieee.std_logic_1164.all;

LIBRARY altera_mf;
USE altera_mf.all;

ENTITY ip_fifo IS
	generic(
        WIDTH          : positive;
		LENGTH_LOG_2   : positive; -- LENGTH = 2 ** LENGTH_LOG_2
		SHOW_AHEAD     : string
	);
	PORT(
		aclr_n        : IN  STD_LOGIC := '0';
		data          : IN  STD_LOGIC_VECTOR(WIDTH - 1 DOWNTO 0);
		rdclk         : IN  STD_LOGIC;
		rdreq         : IN  STD_LOGIC;
		wrclk         : IN  STD_LOGIC;
		wrreq         : IN  STD_LOGIC;
		q             : OUT STD_LOGIC_VECTOR(WIDTH - 1 DOWNTO 0);
        rdempty       : OUT STD_LOGIC;
		rdfull        : OUT STD_LOGIC;
        rdusedw       : OUT STD_LOGIC_VECTOR(LENGTH_LOG_2 - 1 DOWNTO 0);
		wrempty       : OUT STD_LOGIC;
        wrfull        : OUT STD_LOGIC;
        wrusedw       : OUT STD_LOGIC_VECTOR(LENGTH_LOG_2 - 1 DOWNTO 0)
	);
END ip_fifo;

ARCHITECTURE SYN OF ip_fifo IS
	subtype data_type is std_logic_vector(WIDTH - 1 downto 0);

	COMPONENT dcfifo
		GENERIC(
            add_usedw_msb_bit      : STRING;
			intended_device_family : STRING;
			lpm_numwords           : NATURAL;
			lpm_showahead          : STRING;
			lpm_type               : STRING;
			lpm_width              : NATURAL;
			lpm_widthu             : NATURAL;
			overflow_checking      : STRING;
			rdsync_delaypipe       : NATURAL;
			underflow_checking     : STRING;
			use_eab                : STRING;
			wrsync_delaypipe       : NATURAL
		);
		PORT(
			aclr    : IN  STD_LOGIC;
			data    : IN  data_type;
			rdclk   : IN  STD_LOGIC;
			rdreq   : IN  STD_LOGIC;
			wrclk   : IN  STD_LOGIC;
			wrreq   : IN  STD_LOGIC;
			q       : OUT data_type;
            rdempty : OUT STD_LOGIC;
			rdfull  : OUT STD_LOGIC;
            rdusedw : OUT STD_LOGIC_VECTOR(LENGTH_LOG_2 - 1 DOWNTO 0);
			wrempty : OUT STD_LOGIC;
            wrfull  : OUT STD_LOGIC;
            wrusedw : OUT STD_LOGIC_VECTOR(LENGTH_LOG_2 - 1 DOWNTO 0)
		);
	END COMPONENT;

BEGIN

	dcfifo_component : dcfifo
		GENERIC MAP(
            add_usedw_msb_bit      => "OFF",
			intended_device_family => "Cyclone IV GX",
			lpm_numwords           => 2 ** LENGTH_LOG_2,
			lpm_showahead          => SHOW_AHEAD,
			lpm_type               => "dcfifo",
			lpm_width              => WIDTH,
			lpm_widthu             => LENGTH_LOG_2,
			overflow_checking      => "ON",
			rdsync_delaypipe       => 5,
			underflow_checking     => "ON",
			use_eab                => "ON",
			wrsync_delaypipe       => 5
		)
		PORT MAP(
			aclr    => not aclr_n,
			data    => data,
			rdclk   => rdclk,
			rdreq   => rdreq,
			wrclk   => wrclk,
			wrreq   => wrreq,
			q       => q,
            rdempty => rdempty,
			rdfull  => rdfull,
            rdusedw => rdusedw,
			wrempty => wrempty,
            wrfull  => wrfull,
            wrusedw => wrusedw
		);

END SYN;
