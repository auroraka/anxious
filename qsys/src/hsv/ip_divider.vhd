-- altera vhdl_input_version vhdl_2008

-- Manually instantiated megafunction lpm_divide, modified based on the file
-- generated by magafunction wizard.

-- Note the `aclr` (async clear) port is high active in lpm_divide, but we
-- provide a low active `reset_n` port for consistency with other components
-- of the project.

LIBRARY ieee;
USE ieee.std_logic_1164.all;

LIBRARY lpm;
USE lpm.all;

ENTITY ip_divider IS
    generic(
        constant NUMER_WIDTH    : positive;
        constant DENOM_WIDTH    : positive;
        constant NUMER_SIGNNESS : string;
        constant PIPELINE       : natural
    );
	PORT (
        clk      : in  std_logic;
        reset_n  : in  std_logic;

		denom    : IN  STD_LOGIC_VECTOR (DENOM_WIDTH - 1 DOWNTO 0);
		numer    : IN  STD_LOGIC_VECTOR (NUMER_WIDTH - 1 DOWNTO 0);
		quotient : OUT STD_LOGIC_VECTOR (NUMER_WIDTH - 1 DOWNTO 0);
		remain   : OUT STD_LOGIC_VECTOR (DENOM_WIDTH - 1 DOWNTO 0)
	);
END ip_divider;


ARCHITECTURE SYN OF ip_divider IS
	COMPONENT lpm_divide
	GENERIC (
		lpm_drepresentation		: STRING;
		lpm_hint		: STRING;
		lpm_nrepresentation		: STRING;
		lpm_pipeline		: NATURAL;
		lpm_type		: STRING;
		lpm_widthd		: NATURAL;
		lpm_widthn		: NATURAL
	);
	PORT (
			aclr	: IN STD_LOGIC ;
			clock	: IN STD_LOGIC ;
			denom	: IN STD_LOGIC_VECTOR (DENOM_WIDTH - 1 DOWNTO 0);
			numer	: IN STD_LOGIC_VECTOR (NUMER_WIDTH - 1 DOWNTO 0);
			quotient	: OUT STD_LOGIC_VECTOR (NUMER_WIDTH - 1 DOWNTO 0);
			remain	: OUT STD_LOGIC_VECTOR (DENOM_WIDTH - 1 DOWNTO 0)
	);
	END COMPONENT;

BEGIN

	LPM_DIVIDE_component : LPM_DIVIDE
	GENERIC MAP (
		lpm_drepresentation => "UNSIGNED",
		lpm_hint => "LPM_REMAINDERPOSITIVE=TRUE",
		lpm_nrepresentation => NUMER_SIGNNESS,
		lpm_pipeline => PIPELINE,
		lpm_type => "LPM_DIVIDE",
		lpm_widthd => DENOM_WIDTH,
		lpm_widthn => NUMER_WIDTH
	)
	PORT MAP (
		aclr => not reset_n,
		clock => clk,
		denom => denom,
		numer => numer,
		quotient => quotient,
		remain => remain
	);

END SYN;
